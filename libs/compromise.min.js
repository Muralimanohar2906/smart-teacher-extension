// compromise.min.js - tiny noun-extraction shim (fallback)
// Exposes window.nlp(text) with nouns().out('array')
(function(global){
  function nlp(text){
    text = (text||'').toString();
    return {
      nouns: function(){
        return {
          out: function(format){
            // Simple heuristic: return words that are nouns-like:
            // - Capitalized words inside text
            // - Longer words (>=5 chars) that are not common stopwords
            const stop = new Set(['which','that','there','their','these','those','about','after','before','where','when','while','with','have','would','could','should','this','these','they','them','what','who','whom','why','how']);
            const caps = Array.from(new Set((text.match(/\b[A-Z][a-zA-Z]{2,}\b/g)||[])));
            const longWords = Array.from(new Set((text.match(/\b[a-zA-Z]{5,}\b/g)||[]))).filter(w=>!stop.has(w.toLowerCase()));
            // combine, prefer caps first
            const res = caps.concat(longWords).filter(Boolean);
            if (format === 'array') return res;
            return res.join(', ');
          }
        };
      },
      out: function(){}
    };
  }
  global.nlp = nlp;
})(window);
